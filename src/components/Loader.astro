<div class="loader-parent">
  <div class="loader-wrapper" id="loadWrapper"></div>
</div>

<style is:global lang="scss">
  body {
    margin: 0;
  }
  :root {
    --num-cols: 5;
    --num-rows: 5;
  }
  .loader-parent {
    width: 99vw;
    height: 99vh;
    position: absolute;
    top: 0;
    left: 0;
    overflow: hidden;
  }
  .loader-wrapper {
    // position: absolute;
    // top: 0;
    // left: 0;
    display: grid;
    place-items: center;
    z-index: 10;
    margin: 0;
    display: grid;
    grid-template-columns: repeat(var(--num-cols), 1fr);
    grid-template-rows: repeat(var(--num-rows), 1fr);
    height: 100%;
    width: 100%;
    overflow: hidden;
    background: #ffffff;
    backdrop-filter: blur(20px);
    scale: 1;
  }

  .sling-cell {
    font-family: "arial-narrow";
    display: flex;
    align-items: center;
    justify-content: center;
    /* aspect-ratio: 911/560; */
    width: calc(100vw / var(--num-cols));
    height: calc(100vh / var(--num-rows));
    font-size: calc(7vw * var(--num-rows) / var(--num-cols));
    opacity: 0;
    clip-path: inset(0% 0% 0% 0%);
    filter: blur(7px);
    transform: translateY(0px) scale(1, 1) skew(0deg) rotate(0deg);
    // border: 1px solid #ccc;
  }

  /* Optionally, add some styling to make it visually appealing */
  .sling-cell:nth-child(odd) {
    /* background-color: #f0f0f0; */
  }

  .sling-cell:nth-child(even) {
    /* background-color: #e0e0e0; */
  }
</style>

<script>
  import { animate } from "motion";

  document.addEventListener("DOMContentLoaded", async function () {
    const grid = document.querySelector(".loader-wrapper");

    const NUM_COLS = 10;
    const NUM_ROWS = 10;
    const NUM_ROWS_COLS = NUM_ROWS * NUM_COLS;

    // Function to create sling cells with a delay
    const createSlingCells = () => {
      for (let i = 0; i < NUM_ROWS_COLS; i++) {
        const cell = document.createElement("p");
        cell.classList.add("sling-cell");
        cell.textContent = "Sling";
        grid.appendChild(cell);

        // Introduce a delay using a Promise
      }
    };

    // Call the asynchronous function to create sling cells
    createSlingCells();

    const sling = document.querySelectorAll(".sling-cell");

    sling.forEach((el, i) => {
      animate(
        el,
        {
          opacity: [null, 1, 0],
          clipPath: `inset(0% 0% 0% 0%)`,
          transform: `translateY(0px) scale(0.5, 0.5) skew(0deg) rotate(0)`,
          filter: `blur(0)`,
        },
        {
          delay: Math.cos(1.5 * i) / Math.PI,
          duration: 4,
          easing: [0.83, 0, 0.17, 1],
          // repeat: Infinity,
          direction: "alternate",
        }
      );
    });
  });

  const wrapper = document.getElementById("loadWrapper");
  const parent = document.querySelector(".loader-parent");
  animate(
    wrapper,
    {
      opacity: 0,
      scale: 0.87,
      backdropFilter: `blur(0)`,
    },
    {
      duration: 1.75,
      delay: 3.15,
      scale: { delay: 1, duration: 4 },
    }
  ).finished.then(() => {
    parent.style.display = "none";
  });
</script>
